
metadata:
    participant_id:            sim
    graph_name:                simulator30k
    session_description:       2D cursor task neural data simulation, with preparatory activity and xPC formatted output 

# ----------------------------------------------------- 

# graph parameters
parameters:
  nsp_channels: &nsp_channels 96
  total_channels: &total_channels 192

nodes:
  - name:             cb_generator
    nickname:         cb_gen_1
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     4-5
    parameters:
        # logging level for the process
        log: INFO
        # ip address to use for broadcasting
        broadcast_ip: 192.168.137.255
        # port to use for broadcasting
        broadcast_port: 51002
        # device to use for broadcasting
        broadcast_device: enp3s0
        # Frequency, in Hz, for broadcasting data
        broadcast_rate: 1000
        # Frequency, in Hz, at which artificial data is sampled
        sampling_frequency: 30000
        # Number of channels associated with the binary file, or for creating a ramp function
        num_channels: *nsp_channels
        # Timestamp of first sent Cerebus packet
        initial_timestamp: 0
        # Log loop time?
        bool_log_time: 1
        # Use custom start timestamp from graph
        custom_init_deadline: 1
        # Send serial output for Arduino clk?
        bool_serial_clk: 0
        # Input data stream name
        input_stream_name: spike_gen_1
        # How many samples to buffer
        sample_buffering: 10

  - name:             cb_generator
    nickname:         cb_gen_2
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     6-7
    parameters:
        # logging level for the process
        log: INFO
        # ip address to use for broadcasting
        broadcast_ip: 192.168.137.255
        # port to use for broadcasting
        broadcast_port: 51002
        # device to use for broadcasting
        broadcast_device: enp4s0
        # Frequency, in Hz, for broadcasting data
        broadcast_rate: 1000
        # Frequency, in Hz, at which artificial data is sampled
        sampling_frequency: 30000
        # Number of channels associated with the binary file, or for creating a ramp function
        num_channels: *nsp_channels
        # Timestamp of first sent Cerebus packet
        initial_timestamp: 0
        # Log loop time?
        bool_log_time: 1
        # Use custom start timestamp from graph
        custom_init_deadline: 1
        # Send serial output for Arduino clk?
        bool_serial_clk: 0
        # Input data stream name
        input_stream_name: spike_gen_2
        # How many samples to buffer
        sample_buffering: 10

  - name:             spike_gen_30k
    nickname:         spike_gen_1
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     8-9
    parameters:
        # logging level for the process
        log: INFO
        # Sample rate (Hz) of firing rate data
        fr_sample_rate: 200
        # Sample rate (Hz) of node process
        sample_rate: 1000
        # Continuous data rate (Hz) for generated output
        continuous_rate: 30000
        # Random seed for data generation
        random_seed: 42
        # Action potential scale (mV to int16)
        scale: 600
        # Input data stream name
        input_stream: firing_rates
        # Output data stream name
        output_stream: spike_gen_1
        # Number of total simulated neurons in firing rate input
        n_neurons: *total_channels
        # Range of channels to generate data for
        n_start: 0
        n_end: *nsp_channels
        # Max samples to store in Redis (1 sample = 1/'sample rate' s)
        max_samples: 2000000

  - name:             spike_gen_30k
    nickname:         spike_gen_2
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     10-11
    parameters:
        # logging level for the process
        log: INFO
        # Sample rate (Hz) of firing rate data
        fr_sample_rate: 200
        # Sample rate (Hz) of node process
        sample_rate: 1000
        # Continuous data rate (Hz) for generated output
        continuous_rate: 30000
        # Random seed for data generation
        random_seed: 43
        # Action potential scale (mV to int16)
        scale: 600
        # Input data stream name
        input_stream: firing_rates
        # Output data stream name
        output_stream: spike_gen_2
        # Number of total simulated neurons in firing rate input
        n_neurons: *total_channels
        # Range of channels to generate data for
        n_start: *nsp_channels
        n_end: *total_channels
        # Max samples to store in Redis (1 sample = 1/'sample rate' s)
        max_samples: 2000000

  - name:             sim2D
    nickname:         sim2D
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     12-13
    parameters:
        # logging level for the process
        log: INFO
        # Number of neurons to simulate
        n_neurons: *total_channels
        # Max. mouse velocity for normalization
        max_v: 25.0
        # Stream to use as input
        in_stream: mouse_vel
        # Max # of samples to store in Redis
        max_samples: 600000

  - name:             mouseAdapter
    nickname:         mouseAdapterSim
    module:           ../brand-modules/brand-simulator
    run_priority:     99
    cpu_affinity:     14-15
    parameters:
        # Logging level for the process
        log: INFO
        # Number of samples we're expecting to see per Redis stream entry
        samples_per_redis_stream: 1
        # Sample rate in Hz
        sample_rate: 200
        # Mouse device ID
#            mouse_device: /dev/input/by-id/usb-Logitech_Gaming_Mouse_G502_0D7534623937-event-mouse
#            mouse_device: /dev/input/by-id/usb-Logitech_USB_Optical_Mouse-event-mouse
#            mouse_device: /dev/input/by-id/usb-PixArt_Dell_MS116_USB_Optical_Mouse-event-mouse
#            mouse_device: /dev/input/by-id/usb-PixArt_USB_Optical_Mouse-event-mouse
        #mouse_device: /dev/input/by-id/usb-Razer_Razer_Viper_8KHz-event-mouse
        mouse_device: /dev/input/by-id/usb-Razer_Razer_Viper-event-mouse
        # Max number of samples to store in Redis
        max_samples: 6000000

